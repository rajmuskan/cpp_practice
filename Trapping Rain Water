class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        int prefixMax[n];
        prefixMax[0]=height[0];
        for(int i=1;i<n;i++){
            prefixMax[i]=max(prefixMax[i-1],height[i]);
        }
        int suffixMax[n];
        suffixMax[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            suffixMax[i]=max(suffixMax[i+1],height[i]);
        }
        
        int count=0;
        for(int i=1;i<n-1;i++){
            if(suffixMax[i]>height[i] && prefixMax[i]>height[i]){
                if(suffixMax[i]>prefixMax[i]){
                    count+=prefixMax[i]-height[i];
                }else{
                    count+=suffixMax[i]-height[i];
                }
            }
        }
        return count;
    }
};
