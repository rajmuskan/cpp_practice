class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        int n=nums.size();
        
        map<int,int> m;
        
        for(int i=0;i<n;i++){
            if(m.find(nums[i])!=m.end()){
                if(abs(i-m[nums[i]])<=k){
                    return true;
                }else{
                    m[nums[i]]=i;
                }
            }else{
                m[nums[i]]=i;
            }
        }
        return false;
    }
};


//aliter

class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_set<int> s;
        for(int i=0;i<nums.size();i++){
            if(s.count(nums[i])){
                return true;
            }
            s.insert(nums[i]);
            if(s.size()>k){
                s.erase(nums[i-k]);
            }
        }
        return false;
    }
};
