class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL){
            return list2;
        }
        if(list2==NULL){
            return list1;
        }
        
        ListNode* head = NULL;
        ListNode* tail = NULL;
        ListNode* temp1 = list1;
        ListNode* temp2 = list2;
        while(temp1!=NULL && temp2!=NULL){
            if(temp1->val < temp2->val){
                ListNode *newNode = new ListNode(temp1->val);
                if(head==NULL){
                    head = newNode;
                    tail=newNode;
                }else{
                    tail->next = newNode;
                    tail = tail->next;
                }
                temp1=temp1->next;
            }else{
                ListNode *newNode = new ListNode(temp2->val);
                if(head==NULL){
                    head = newNode;
                    tail=newNode;
                }else{
                    tail->next = newNode;
                    tail = tail->next;
                }
                temp2=temp2->next;
            }
        }
        while(temp1!=NULL){
            ListNode *newNode = new ListNode(temp1->val);
            tail->next=newNode;
            tail = tail ->next;
            temp1 = temp1->next;
        }
        while(temp2!=NULL){
            ListNode *newNode = new ListNode(temp2->val);
            tail->next=newNode;
            tail = tail ->next;
            temp2 = temp2->next;
        }
        return head;
    }
};
