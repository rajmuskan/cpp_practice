//Brute force
int Solution::solve(vector<vector<int> > &A, int B) {
    int row=A.size();
    int col=A[0].size();
    int max_sum = INT_MIN;
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            //important condition keep in mind.
            if(i+B<=row && j+B<=col){
                int sum=0;
                for(int k=i;k<i+B;k++){
                    for(int l=j;l<j+B;l++){
                        sum+=A[k][l];
                    }
                }
                max_sum=max(sum,max_sum);
            }
            
        }
    }
    return max_sum;
}

















//DP Approach
int Solution::solve(vector<vector<int> > &A, int B) {
    int row=A.size();
    int col=A[0].size();
    
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            if(i-1>=0){
                A[i][j]+=A[i-1][j];
            }
            if(j-1>=0){
                A[i][j]+=A[i][j-1];
            }
            if(i-1>=0 && j-1>=0){
                A[i][j]-=A[i-1][j-1];
            }
        }
    }
    
    int max_sum=INT_MIN;
    
    for(int i=B-1;i<row;i++){
        for(int j=B-1;j<col;j++){
            int local =A[i][j];
            if(i-B>=0){
                local-=A[i-B][j];
            }
            if(j-B>=0){
                local-=A[i][j-B];
            }
            if(i-B>=0 && j-B>=0){
                local+=A[i-B][j-B];
            }
            max_sum=max(max_sum,local);
        }
    }
    return max_sum;
}
