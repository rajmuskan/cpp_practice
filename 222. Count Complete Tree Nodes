/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int leftheight(TreeNode * root){
    TreeNode * temp1 = root;
    int lh=0;
    while(temp1){
        lh++;
        temp1= temp1->left;
    }
    return lh;
}
int rightheight(TreeNode * root){
    TreeNode * temp2 = root;
    int rh=0;
    while(temp2){
        rh++;
        temp2= temp2->right;
    }
    return rh;
}
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(root == NULL) return 0;
        int lh= leftheight(root);
        int rh= rightheight(root);
        if(lh==rh) return ((1<<lh)-1);
        return 1 + countNodes(root->left) + countNodes(root->right);
    }
};
